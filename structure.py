"""
Telemedicine Platform Project Structure

ðŸ“¦ Root
â”œâ”€â”€ ðŸ“‚ app/
â”‚   â”œâ”€â”€ __init__.py          # Flask application initialization
â”‚   â”œâ”€â”€ models.py            # Database models
â”‚   â”œâ”€â”€ api.py              # API routes and endpoints
â”‚   â”œâ”€â”€ auth.py             # Authentication logic
â”‚   â””â”€â”€ chatbot.py          # AI chatbot implementation
â”œâ”€â”€ ðŸ“‚ client/
â”‚   â”œâ”€â”€ ðŸ“‚ src/
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ components/
â”‚   â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ ui/      # Shadcn UI components
â”‚   â”‚   â”‚   â”œâ”€â”€ appointment-form.tsx
â”‚   â”‚   â”‚   â””â”€â”€ video-call.tsx
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ hooks/
â”‚   â”‚   â”‚   â”œâ”€â”€ use-appointments.ts
â”‚   â”‚   â”‚   â”œâ”€â”€ use-mobile.tsx
â”‚   â”‚   â”‚   â”œâ”€â”€ use-toast.ts
â”‚   â”‚   â”‚   â””â”€â”€ use-user.ts
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ lib/         # Utility functions
â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ pages/
â”‚   â”‚   â”‚   â”œâ”€â”€ ðŸ“‚ dashboard/
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ admin.tsx
â”‚   â”‚   â”‚   â”‚   â”œâ”€â”€ doctor.tsx
â”‚   â”‚   â”‚   â”‚   â””â”€â”€ patient.tsx
â”‚   â”‚   â”‚   â”œâ”€â”€ auth-page.tsx
â”‚   â”‚   â”‚   â””â”€â”€ not-found.tsx
â”‚   â”‚   â”œâ”€â”€ App.tsx         # Main React application
â”‚   â”‚   â”œâ”€â”€ index.css       # Global styles
â”‚   â”‚   â””â”€â”€ main.tsx        # Application entry point
â”‚   â””â”€â”€ index.html
â”œâ”€â”€ ðŸ“‚ db/                  # Database configuration and migrations
â”œâ”€â”€ ðŸ“‚ server/
â”‚   â”œâ”€â”€ routes.ts           # Express server routes
â”‚   â”œâ”€â”€ auth.ts             # Authentication middleware
â”‚   â”œâ”€â”€ index.ts            # Server entry point
â”‚   â””â”€â”€ vite.ts             # Vite configuration
â”œâ”€â”€ run.py                  # Flask application runner
â”œâ”€â”€ drizzle.config.ts       # Drizzle ORM configuration
â”œâ”€â”€ package.json            # Node.js dependencies
â”œâ”€â”€ tsconfig.json           # TypeScript configuration
â”œâ”€â”€ postcss.config.js       # PostCSS configuration
â”œâ”€â”€ tailwind.config.ts      # Tailwind CSS configuration
â”œâ”€â”€ theme.json             # Application theme configuration
â”œâ”€â”€ vite.config.ts         # Vite bundler configuration
â””â”€â”€ requirements.txt       # Python dependencies

Key Features:
1. Multi-role authentication (Patient, Doctor, Admin)
2. Appointment management
3. Video consultations
4. Medical records management
5. AI-powered symptom triage chatbot
   - OpenAI GPT-4 integration
   - Hugging Face BioGPT support
   - Meta's Llama-2 integration
6. Prescription management
7. Document sharing
"""